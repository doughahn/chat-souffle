:: provided assessment track 2

!! Refine Part 2
<html>
<p>Now write a follow up prompt refining what you&rsquo;re asking ChatGPT to do. Mention a criterion for effective distractors or other best practices as needed to help ChatGPT produce better content.</p>
<p>Evaluate it based on the criteria for effective distractors (<a id="review-criteria-from-proivided-prompt-part-2" onclick="customLinkHandler('criteria for effective distractors')">review criteria</a>). Is the new version is worse/equal/better than the original?</p>
    <form id="provided-track-2" class="pure-form" data-parent="provided-example-track">
        <label for="provided-track-2-opt-1" class="pure-checkbox">
            <input type="radio" name="provided-track-2-choice" id="provided-track-2-opt-1" value="Worse" onclick="checkOptionSelected('provided-track-2')" />Worse.
        </label>
        <label for="provided-track-2-opt-2" class="pure-checkbox">
            <input type="radio" name="provided-track-2-choice" id="provided-track-2-opt-2" value="Equal" onclick="checkOptionSelected('provided-track-2')" />Equal 
        </label>
        <label for="provided-track-2-opt-3" class="pure-checkbox">
            <input type="radio" name="provided-track-2-choice" id="provided-track-2-opt-3" value="Better" onclick="checkOptionSelected('provided-track-2')" />Better
        </label>
        <button type="button" onclick="sendFormXAPIStatement('provided-track-2'); checkOptionSelected('provided-track-2'); customButtonHandler('provided assessment track 2 freeform')" id="provided-track-2-submit" class="pure-button pure-button-primary" disabled>Submit Your Choice</button>
    </form>
</html> 

<script>
setTimeout(function() {
    const copyButtons = document.querySelectorAll(".copyButton");

    copyButtons.forEach(button => {
        button.addEventListener("click", function() {
            const text = this.parentElement.nextElementSibling.innerText;
            navigator.clipboard.writeText(text)
                .then(() => {
                    console.log("Text copied to clipboard");
                    const copiedMessage = this.nextElementSibling;
                    setTimeout(() => {
                        copiedMessage.classList.remove("show");
                    }, 1000);
                    this.innerText = "Copied";
                    this.classList.add("copied");
                })
                .catch(err => {
                    console.error("Error copying text: ", err);
                });
        });
    });
}, 100);

</script>