:: provided assessment track 1
<html><h5>Refining a provided prompt <i class="fas fa-caret-right"></i></h5></html>
!! Part 1
<html>
<h3>Copy the prompt below that asks ChatGPT to refine the multiple choice question.</h3>
<div class="prompt-text-area">
    <div class="prompt-text-header">
        <h3><span class="light-gray-text">Prompt Text</span></h3>
        <button class="copyButton" title="Copy to Clipboard">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-clipboard">
                <path d="M8 4H6c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10l-4-4h-6zM8 4h6v2H8V4zM8 6v2h6V6H8z"/>
            </svg>
            Copy
        </button>
        <span class="copiedMessage">Copied!</span>
    </div>
    <div class="prompt-text-content">
<pre class="monospaced-text">You are a teacher of cooking class. You teach middle school students the basics of healthy and safe cooking. The age of your students is 12-16.
Your task: Using the information above, generate a multiple choice assessment which helps the learners described above to correctly understand core foundational knowledge relating to cooking healthy meals.</pre>
    </div>
</div><br />
<h3>Evaluate it based on the criteria for effective distractors (review criteria below if needed). Is the assessment unacceptable/adequate/excellent in your opinion?</h3>
<hr>
<h3>Which of the following best describes your experience using ChatGPT?</h3>
    <form id="provided-track-1" class="pure-form" data-parent="provided-example-track">
        <label for="provided-track-1-opt-1" class="pure-checkbox">
            <input type="radio" name="provided-track-1-choice" id="provided-track-1-opt-1" value="unacceptable-using-chatGPT-with-first-copy-of-prompt" onclick="checkOptionSelected('provided-track-1')" />Unacceptable 
        </label>
        <label for="provided-track-1-opt-2" class="pure-checkbox">
            <input type="radio" name="provided-track-1-choice" id="provided-track-1-opt-2" value="adequate-experience-using-chatGPT-with-first-copy-of-prompt" onclick="checkOptionSelected('provided-track-1')" />Adequate 
        </label>
        <label for="provided-track-1-opt-3" class="pure-checkbox">
            <input type="radio" name="provided-track-1-choice" id="provided-track-1-opt-3" value="excellent-experience-using-chatGPT-with-first-copy-of-prompt" onclick="checkOptionSelected('provided-track-1')" />Excellent
        </label>
        <button type="button" onclick="sendFormXAPIStatementNoVoid('provided-track-1'); checkOptionSelected('provided-track-1'); customButtonHandler('provided assessment track 1 freeform')" id="provided-track-1-submit" class="pure-button pure-button-primary" disabled>Submit your choice</button>
    </form>
    <br />
<div class="dropdown-container">
  <div class="dropdown-header" onclick="toggleContent()">
    <h3><span class="light-gray-text">Review the criteria</span></h3>
    <span class="arrow">&#9662;</span>
  </div>
  <div id="provided-track-1-content-dropdown" class="dropdown-text-content" style="display: none;">
    <p>Use the criteria below to evaluate ChatGPT&rsquo;s assessment questions.</p>
    <div class="tip-box">
        <div class="tip-icon">
            <i class="fas fa-pen"></i>
        </div>
        <div class="tip-content">
            <h3 class="tip-title">Evaluation criteria</h3>
                <ul>
                <li>Write options that are congruent in length.</li>
                <li>Write options that use parallel grammatical structure (e.g. if answer(s) start with a verb, so should the distractors).</li>
                <li>Avoid &ldquo;True/False,&rdquo; “All of the Above,” or “Both A and B Only” (or other such combinations).</li>
                <li>Use plausible but incorrect distractors.</li>
                <li>Use only truly correct answers.</li>
                <li>Avoid negative phrasing.</li>
            </ul>
        </div>
    </div>
    <p>Review assessment writing best practices at these external resources before moving on:</p>
    <ul>
        <li><a id="vanderbilt-external-link-review-1" class="external-link" href="https://cft.vanderbilt.edu/guides-sub-pages/writing-good-multiple-choice-test-questions/" target="blank">Writing Good Multiple Choice Test Questions - Vanderbilt University Center for Teaching</a></li>
        <li><a id="conneticut-external-link-review-1" class="external-link" href="https://kb.ecampus.uconn.edu/2020/09/30/writing-effective-multiple-choice-questions-2/" target="blank">Writing Effective Multiple Choice Questions - University of Connecticut Knowledge Base</a></li>
    </ul>
  </div>
</div>
</html>

<script>
setTimeout(function() {
    const copyButtons = document.querySelectorAll(".copyButton");

    copyButtons.forEach(button => {
        button.addEventListener("click", function() {
            const text = this.parentElement.nextElementSibling.innerText;
            navigator.clipboard.writeText(text)
                .then(() => {
                    console.log("Text copied to clipboard");
                    const copiedMessage = this.nextElementSibling;
                    setTimeout(() => {
                        copiedMessage.classList.remove("show");
                    }, 1000);
                    this.innerText = "Copied";
                    this.classList.add("copied");
                })
                .catch(err => {
                    console.error("Error copying text: ", err);
                });
        });
    });
}, 100);
</script>

<script>
function toggleContent() {
  const content = document.getElementById('provided-track-1-content-dropdown');
  const arrow = document.querySelector('.arrow');

  if (content.style.display === 'none') {
    content.style.display = 'block';
    arrow.classList.add('arrow-up');
  } else {
    content.style.display = 'none';
    arrow.classList.remove('arrow-up');
  }
}
</script>

<<run setup.trackStarts++>>
<<run setup.currentIterationId = "provided_assessment_track_loop_" + (setup.trackStarts)>>
<<run setup.iterationActivities[setup.currentIterationId] = []>>