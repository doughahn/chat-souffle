:: custom assessment track 3
<html><h5>Custom assessment <i class="fas fa-caret-right"></i></h5></html>
!! Refine part 3
<html>
<p>Now give ChatGPT specific instructions one at a time to tweak the question. For example:</p>
<ol start="1">
  <li>Revise to make the length of each answer option more similar.</li>
  <li>Edit the answer option “[copy text here]” to be more plausible.</li>
</ol>
<p>Give as many instructions as you like. When you&rsquo;ve tried everything you want to, evaluate the best revised version it produced based on the criteria for effective distractors (review criteria if needed). Is the assessment now worse/equal/better in your opinion? </p>
    <form id="custom-track-3" class="pure-form" data-parent="custom-track">
        <label for="custom-track-3-opt-1" class="pure-checkbox">
            <input type="radio" name="custom-track-3-choice" id="custom-track-3-opt-1" value="after-trying-everything-chatgpt-assessment-is-worse" onclick="checkOptionSelected('custom-track-3')" />Worse 
        </label>
        <label for="custom-track-3-opt-2" class="pure-checkbox">
            <input type="radio" name="custom-track-3-choice" id="custom-track-3-opt-2" value="after-trying-everything-chatgpt-assessment-is-equal" onclick="checkOptionSelected('custom-track-3')" />Equal 
        </label>
        <label for="custom-track-3-opt-3" class="pure-checkbox">
            <input type="radio" name="custom-track-3-choice" id="custom-track-3-opt-3" value="after-trying-everything-chatgpt-assessment-is-better" onclick="checkOptionSelected('custom-track-3')" />Better
        </label>
        <button type="button" onclick="sendFormXAPIStatementNoVoid('custom-track-3'); checkOptionSelected('custom-track-3'); customButtonHandler('custom assessment track 3 freeform')" id="custom-track-3-submit" class="pure-button pure-button-primary" disabled>Submit your choice</button>
    </form>
<br />
<div class="dropdown-container">
  <div class="dropdown-header" onclick="toggleContent()">
    <h3><span class="light-gray-text">Review criteria</span></h3>
    <span class="arrow">&#9662;</span>
  </div>
  <div id="custom-track-3-content-dropdown" class="dropdown-text-content" style="display: none;">
    <p>Use the criteria below to evaluate ChatGPT&rsquo;s assessment questions.</p>
    <div class="tip-box">
        <div class="tip-icon">
            <i class="fas fa-pen"></i>
        </div>
        <div class="tip-content">
            <h3 class="tip-title">Evaluation criteria</h3>
                <ul>
                <li>Write options that are congruent in length.</li>
                <li>Write options that use parallel grammatical structure (e.g. if answer(s) start with a verb, so should the distractors).</li>
                <li>Avoid &ldquo;True/False,&rdquo; “All of the Above,” or “Both A and B Only” (or other such combinations).</li>
                <li>Use plausible but incorrect distractors.</li>
                <li>Use only truly correct answers.</li>
                <li>Avoid negative phrasing.</li>
            </ul>
        </div>
    </div>
    <p>Review assessment writing best practices at these external resources before moving on:</p>
    <ul>
        <li><a id="vanderbilt-external-link-review-custom-3" class="external-link" href="https://cft.vanderbilt.edu/guides-sub-pages/writing-good-multiple-choice-test-questions/" target="blank">Writing Good Multiple Choice Test Questions - Vanderbilt University Center for Teaching</a></li>
        <li><a id="conneticut-external-link-review-custom-3" class="external-link" href="https://kb.ecampus.uconn.edu/2020/09/30/writing-effective-multiple-choice-questions-2/" target="blank">Writing Effective Multiple Choice Questions - University of Connecticut Knowledge Base</a></li>
    </ul>
  </div>
  </html>

<script>
function toggleContent() {
  const content = document.getElementById('custom-track-3-content-dropdown');
  const arrow = document.querySelector('.arrow');

  if (content.style.display === 'none') {
    content.style.display = 'block';
    arrow.classList.add('arrow-up');
  } else {
    content.style.display = 'none';
    arrow.classList.remove('arrow-up');
  }
}
</script>